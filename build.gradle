apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'jacoco'

group 'flux.compiler'
version '1.0'

buildscript {
    ext.kotlin_version = '1.3.50'

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "http://repo1.maven.org/maven2/" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

jar {
    manifest {
        attributes(
                'Main-Class': 'org.flux.lexical.MainKt'
        )
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
}

mainClassName = 'org.flux.application.Main'

repositories {
    mavenCentral()
    jcenter()
}

test {
    useJUnitPlatform {
        includeEngines 'junit-jupiter', 'junit-vintage'
    }
}

dependencies {
    compile "com.xenomachina:kotlin-argparser:2.0.7"
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile("org.assertj:assertj-core:3.11.1")
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions {
        freeCompilerArgs = ["-Xinline-classes"]
    }
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jacoco {
    toolVersion = "0.8.5"
}

jacocoTestReport {
    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = true
    }
}

test.finalizedBy(jacocoTestReport)